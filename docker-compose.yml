version: '3.8'

services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # HebKaraoke Services
  downloader:
    build:
      context: ./services/downloader
      dockerfile: Dockerfile
    container_name: hebkaraoke-downloader
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - mongodb
      - elasticsearch
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://root:password@mongodb:27017
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  processor:
    build:
      context: ./services/processor
      dockerfile: Dockerfile
    container_name: hebkaraoke-processor
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://root:password@mongodb:27017

  transcriber:
    build:
      context: ./services/transcriber
      dockerfile: Dockerfile
    container_name: hebkaraoke-transcriber
    ports:
      - "8002:8002"
    depends_on:
      - kafka
      - mongodb
      - elasticsearch
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://root:password@mongodb:27017
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200

  lrc-generator:
    build:
      context: ./services/lrc-generator
      dockerfile: Dockerfile
    container_name: hebkaraoke-lrc-generator
    ports:
      - "8003:8003"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://root:password@mongodb:27017

  ui:
    build:
      context: ./services/ui
      dockerfile: Dockerfile
    container_name: hebkaraoke-ui
    ports:
      - "8501:8501"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://root:password@mongodb:27017

volumes:
  elasticsearch_data:
  mongodb_data:
  redis_data:

networks:
  default:
    name: hebkaraoke-network